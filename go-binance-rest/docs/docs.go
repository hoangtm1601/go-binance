// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "SignInUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignInUser",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "RefreshAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "RefreshAccessToken",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "SignUpUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignUpUser",
                "parameters": [
                    {
                        "description": "Register payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserResponse"
                        }
                    }
                }
            }
        },
        "/candles/indicators": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve candles with calculated indicators for a given time range and symbol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candles"
                ],
                "summary": "Get candles with indicators",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2024-09-25T00:00:00Z",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "1min",
                            "5min",
                            "15min",
                            "30min",
                            "60min",
                            "240min",
                            "720min",
                            "1440min"
                        ],
                        "type": "string",
                        "example": "1min",
                        "x-enum-varnames": [
                            "OneMin",
                            "FiveMin",
                            "FifteenMin",
                            "ThirtyMin",
                            "SixtyMin",
                            "TwoFortyMin",
                            "SevenTwentyMin",
                            "FourteenFortyMin"
                        ],
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "example": 15,
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-09-20T00:00:00Z",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "BTCUSDT",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.CandleWithIndicators"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a paginated list of payment transactions for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "List user payments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 5,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.IndexTransactionsResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new payment transaction for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Create a new payment",
                "parameters": [
                    {
                        "description": "CreatePayment payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.CreateTransactionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.TransactionResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ListUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "ListUsers",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 5,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserListResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetMe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "GetMe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserResponse"
                        }
                    },
                    "500": {
                        "description": "an error occurred during the modification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "GetUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserResponse"
                        }
                    },
                    "500": {
                        "description": "an error occurred during the modification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_hoangtm1601_go-binance-rest_internal_models.CandleInterval": {
            "type": "string",
            "enum": [
                "1min",
                "5min",
                "15min",
                "30min",
                "60min",
                "240min",
                "720min",
                "1440min"
            ],
            "x-enum-varnames": [
                "OneMin",
                "FiveMin",
                "FifteenMin",
                "ThirtyMin",
                "SixtyMin",
                "TwoFortyMin",
                "SevenTwentyMin",
                "FourteenFortyMin"
            ]
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "default": "USD"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.TransactionStatus"
                },
                "transactionDate": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.TransactionType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models.TransactionStatus": {
            "type": "string",
            "enum": [
                "Failed",
                "Succeeded"
            ],
            "x-enum-varnames": [
                "Failed",
                "Succeeded"
            ]
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models.TransactionType": {
            "type": "string",
            "enum": [
                "charge",
                "refund"
            ],
            "x-enum-varnames": [
                "Charge",
                "Refund"
            ]
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.CandleResponseDTO": {
            "type": "object",
            "properties": {
                "bv": {
                    "type": "number"
                },
                "cl": {
                    "type": "number"
                },
                "cnt": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "hi": {
                    "type": "number"
                },
                "interval": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.CandleInterval"
                },
                "lastEnd": {
                    "type": "integer"
                },
                "lo": {
                    "type": "number"
                },
                "op": {
                    "type": "number"
                },
                "qv": {
                    "type": "number"
                },
                "start": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "tbv": {
                    "type": "number"
                },
                "tqv": {
                    "type": "number"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.CandleWithIndicators": {
            "type": "object",
            "properties": {
                "candle": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.CandleResponseDTO"
                },
                "indicators": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.IndicatorResult"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.CreateTransactionDTO": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.IndexTransactionsResponseDTO": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.PaginationMetadataDTO"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.Transaction"
                    }
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.IndicatorResult": {
            "type": "object",
            "properties": {
                "bollingerLower": {
                    "type": "number"
                },
                "bollingerMiddle": {
                    "type": "number"
                },
                "bollingerUpper": {
                    "type": "number"
                },
                "dema": {
                    "type": "number"
                },
                "macd": {
                    "type": "number"
                },
                "rsi": {
                    "type": "number"
                },
                "signal": {
                    "type": "number"
                },
                "sma": {
                    "type": "number"
                },
                "stochasticD": {
                    "type": "number"
                },
                "stochasticK": {
                    "type": "number"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.PaginationMetadataDTO": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.SignInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456@Abc"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.SignUpInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "passwordConfirm",
                "photo"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "123456@Abc"
                },
                "passwordConfirm": {
                    "type": "string",
                    "example": "123456@Abc"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.TransactionResponseDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.TransactionStatus"
                },
                "transaction_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models.TransactionType"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserListResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserResponse"
                    }
                }
            }
        },
        "github_com_hoangtm1601_go-binance-rest_internal_models_dto.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Authentication API",
	Description:      "This is authentication golang server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
